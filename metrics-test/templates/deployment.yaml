apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx-config
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"  # изменено на порт metrics-sidecar
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            
        - name: nginx-proxy
          image: nginx:1.21
          ports:
            - containerPort: 80
              name: http-nginx
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
          readinessProbe:
            httpGet:
              path: /stub_status
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi

        - name: metrics-sidecar
          image: nginx/nginx-prometheus-exporter:0.10.0
          args:
            - -nginx.scrape-uri=http://localhost:80/stub_status  # изменено на порт nginx-proxy
          ports:
            - name: metrics
              containerPort: 9113
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
